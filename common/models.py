from pydantic import BaseModel, Field
import enum
from typing import Optional, Union
import datetime

class Account(BaseModel):
    user_id: Optional[str] = Field(None, min_length=1)  # uuid, can be generated by the database
    username: str = Field(..., min_length=1)  # must be non-empty
    password_hash: str = Field(..., min_length=1)  # must be non-empty
    created_at: Union[str, datetime.datetime] = Field(default_factory=datetime.datetime.now)

class Portfolio(BaseModel):
    portfolio_id: Optional[str] = Field(None, min_length=1)  # uuid, can be generated by the database
    portfolio_name: str = Field(..., min_length=1)  # the name the user gives for the portfolio, required
    portfolio_address: str = Field(None, min_length=1)  # the address of the portfolio on AWS S3
    created_at: Union[str, datetime.datetime] = Field(default_factory=datetime.datetime.now)
